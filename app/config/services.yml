# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    #parameter_name: value

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false
        bind:
              $mailerUser: '%mailer_user%'
              $roleHierarchy: '%security.role_hierarchy.roles%'

    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    AppBundle\:
        resource: '../../src/AppBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/AppBundle/{Entity,Repository,Tests}'

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    AppBundle\Controller\:
        resource: '../../src/AppBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

    # add more services, or override services that need manual wiring
    # AppBundle\Service\ExampleService:
    #     arguments:
    #         $someArgument: 'some_value'
    Jsor\Doctrine\PostGIS\Event\ORMSchemaEventSubscriber:
            tags:
                - { name: doctrine.event_subscriber, connection: default }

    app.service.auxiliary_function:
            class:     AppBundle\Service\AuxiliaryFunction
            arguments:
                - "@doctrine.orm.entity_manager"
            public: true

    app.service.paginator_services:
                class:     AppBundle\Service\PaginatorServices
                arguments:
                    - "@doctrine.orm.entity_manager"
                    - "@knp_paginator"
                public: true


    app.form.registration:
            class: AppBundle\Form\RegistrationType
            tags:
                - { name: form.type, alias: app_user_registration }

    app.service.api_client.osm_request_client:
        class:     AppBundle\Service\ApiClient\OsmRequestClient
        arguments:
          ['%osm_services_api_token%']
        calls:
          - method: setLogger
            arguments:
              ['@logger']
          - method: setAccessToken
            arguments:
              ['%osm_services_api_client_id%', '%osm_services_api_client_secret%']
        public: true
        # autowire: false

    #app.register:
    #        autoconfigure: false
    #        class: AppBundle\EventListener\AutoDisableUserListener
    #        arguments: ['@session','@router','@doctrine.orm.entity_manager', '@mailer']
    #        tags:
    #          - { name: kernel.event_subscriber }

    #app.service.geometry:
    #            class:     AppBundle\Service\Geometry
    #            arguments:
    #                - "@doctrine.orm.entity_manager"
    #            public: true

    #app.exception_listener:
    #    class: AppBundle\Listener\ExceptionListener
    #    arguments: [ "@templating", "@kernel" ]
    #    tags:
    #        - { name: kernel.event_listener, event: kernel.exception, method: onKernelException }